stat <- final %>% select(sampleID, age, line, RelExp_B1, RelExp_B8, RelExp_B15)
stat$age_line <- paste(stat$age, stat$line, sep = "_")
lm1 <- lm(RelExp_B1 ~ line + age, data=stat)
lm2 <- lm(RelExp_B1 ~ age_line, data=stat)
summary(lm1)
summary(lm2)
lm2 <- lm(RelExp_B1~ 0 + line * age, data = final)
summary(lm2)
age <- stat$age
line <- stat$line
df1 <- reshape(stat, direction='long',
varying=4:6,
timevar='Transcript',
times=c('B1', 'B8', "B15"),
v.names=c('Rel_expression_ratio'),
idvar='sampleID')
df1 <- df1[,c("sampleID", "Transcript", "Rel_expression_ratio", "age", "line")]
df2 <- reshape(df1[,c(1,2,3)], direction = "wide",timevar="sampleID",idvar="Transcript")
df3 <- df2[,-1]
rownames(df3) <- df2[,1]
View(df3)
library(purrr)
library(tibble)
library(tidyverse)
nKO <- 5 #No. of KO sample
nTAG <- 5 # No. of TAG sample
nWT <- 5 # No. of WT sample
set.seed(11)
geneB1 <- rbind(replicate(n = 3, rnorm(nKO, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 19, .08), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 19, .08), simplify = TRUE))
geneB8 <- rbind(replicate(n = 3, rnorm(nKO, 15, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 13.5, .08), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 13.5, .08), simplify = TRUE))
geneB15 <- rbind(replicate(n = 3, rnorm(nKO, 5.5, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 5, .08), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 5, .08), simplify = TRUE))
GOI1 <- data.frame(geneB1, geneB8, geneB15)
View(GOI1)
Hk1 <- rbind(replicate(n = 3, rnorm(nKO, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 20, .1), simplify = TRUE))
Hk2 <- rbind(replicate(n = 3, rnorm(nKO, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 22, .1), simplify = TRUE))
Hk_1 <- data.frame(Hk1, Hk2)
View(Hk_1)
day15 <- data.frame(GOI1, Hk_1)
View(day15)
colnames(day15) <- c(paste0("geneB1_run", seq(1:3)), paste0("geneB8_run", seq(1:3)), paste0("geneB15_run", seq(1:3)), paste0("Hk1_run", seq(1:3)), paste0("Hk2_run", seq(1:3)))
day15$sampleID <- c(paste0("KO", seq(1, nKO)),
paste0("TAG", seq(1, nTAG)),
paste0("WT", seq(1, nWT))) #naming sample/ID
day15 <- day15[, c(ncol(day15), 1:ncol(day15) - 1)] #reordering: last column at the beginning and others are in the same sequence
day15$age <- rep("15days", times = nrow(day15)) #adding age to all. nrow means how many sample
day15$line <- c(rep("KO", times = nKO), rep("TAG", times = nTAG), rep("WT", times = nWT))
geneB1_1 <- rbind(replicate(n = 3, rnorm(nKO, 15, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 13, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 13, .07), simplify = TRUE))
geneB8_1 <- rbind(replicate(n = 3, rnorm(nKO, 11, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 9.5, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 9.5, .07), simplify = TRUE))
geneB15_1 <- rbind(replicate(n = 3, rnorm(nKO, 4, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 3.5, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 3.5, .07), simplify = TRUE))
GOI2 <- data.frame(geneB1_1, geneB8_1, geneB15_1)
Hk1_1 <- rbind(replicate(n = 3, rnorm(nKO, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 20, .1), simplify = TRUE))
Hk2_1 <- rbind(replicate(n = 3, rnorm(nKO, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 22, .1), simplify = TRUE))
Hk_2 <- data.frame(Hk1_1, Hk2_1)
month1 <- data.frame(GOI2, Hk_2)
colnames(month1) <- c(paste0("geneB1_run", seq(1:3)), paste0("geneB8_run", seq(1:3)), paste0("geneB15_run", seq(1:3)), paste0("Hk1_run", seq(1:3)), paste0("Hk2_run", seq(1:3)))
month1$sampleID <- c(paste0("KO", seq(nKO+1, 2*nKO)),
paste0("TAG", seq(nTAG+1, 2*nTAG)),
paste0("WT", seq(nWT+1, 2*nWT)))
month1 <- month1[, c(ncol(month1), 1:ncol(month1) - 1)]
month1$age <- rep("1month", times = nrow(month1))
month1$line <- c(rep("KO", times = nKO), rep("TAG", times = nTAG), rep("WT", times = nWT))
geneB1_2 <- rbind(replicate(n = 3, rnorm(nKO, 12, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 10, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 10, .07), simplify = TRUE))
geneB8_2 <- rbind(replicate(n = 3, rnorm(nKO, 8, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 7, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 7, .07), simplify = TRUE))
geneB15_2 <- rbind(replicate(n = 3, rnorm(nKO, 4, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 3, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 3, .07), simplify = TRUE))
GOI3 <- data.frame(geneB1_2, geneB8_2, geneB15_2)
Hk1_2 <- rbind(replicate(n = 3, rnorm(nKO, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 20, .1), simplify = TRUE))
Hk2_2 <- rbind(replicate(n = 3, rnorm(nKO, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 22, .1), simplify = TRUE))
Hk_3 <- data.frame(Hk1_2, Hk2_2)
month3 <- data.frame(GOI3, Hk_3)
colnames(month3) <- c(paste0("geneB1_run", seq(1:3)), paste0("geneB8_run", seq(1:3)), paste0("geneB15_run", seq(1:3)), paste0("Hk1_run", seq(1:3)), paste0("Hk2_run", seq(1:3)))
month3$sampleID <- c(paste0("KO", seq(2*nKO+1, 3*nKO)),
paste0("TAG", seq(2*nTAG+1, 3*nTAG)),
paste0("WT", seq(2*nWT+1, 3*nWT)))
month3 <- month3[, c(ncol(month3), 1:ncol(month3) - 1)]
month3$age <- rep("3months", times = nrow(month3))
month3$line <- c(rep("KO", times = nKO), rep("TAG", times = nTAG), rep("WT", times = nWT))
pcr1 <- rbind(day15, month1, month3)
View(pcr)
View(pcr1)
data1 <- pcr1[, c("sampleID", "age", "line", "Ct_geneB1", "Ct_geneB8", "Ct_geneB15", "Ct_Hk1", "Ct_Hk2")]
a <- pcr1 %>% select_if(is.numeric) %>% colnames()
pcr1$Ct_geneB1 <- apply(pcr1[, c(grep("geneB1_", a, ignore.case = TRUE, value = T))], 1, mean)
pcr1$Ct_geneB8 <- apply(pcr1[, c(grep("geneB8_", a, ignore.case = TRUE, value = T))], 1, mean)
pcr1$Ct_geneB15 <- apply(pcr1[, c(grep("geneB15_", a, ignore.case = TRUE, value = T))], 1, mean)
pcr1$Ct_Hk1 <- apply(pcr1[, c(grep("Hk1", a, ignore.case = TRUE, value = T))], 1, mean)
pcr1$Ct_Hk2 <- apply(pcr1[, c(grep("Hk2", a, ignore.case = TRUE, value = T))], 1, mean)
data1 <- pcr1[, c("sampleID", "age", "line", "Ct_geneB1", "Ct_geneB8", "Ct_geneB15", "Ct_Hk1", "Ct_Hk2")]
View(data1)
efficiencies <- c(1.98, 2, 2.02, 2.01, 2.01)
names(efficiencies) <- c("B1", "B8", "B15", "Hk1", "Hk2")
calibrator <- data1[data1$line == "WT" & data1$age == "15days",] %>% select_if(is.numeric)
Ct_avg <- apply(calibrator, 2, mean)
Ct <- data1 %>% select_if(is.numeric)
delta_Ct <- matrix(nrow=nrow(Ct), ncol=ncol(Ct))
for(i in 1:ncol(Ct)) {
delta_Ct[ , i] <- Ct_avg[[i]] - Ct[ , i]
}
colnames(delta_Ct) <- c(paste0("delta", names(Ct)))
RQ <- matrix(nrow=nrow(delta_Ct), ncol=ncol(delta_Ct))
for(i in 1:length(efficiencies)) {
RQ[ , i] <-  efficiencies[i]^delta_Ct[,i]
}
colnames(RQ) <- c(paste0("RQ_", names(efficiencies)))
geoMean_Hk <- apply(RQ[, 4:5], 1, function(x) exp(mean(log(x))))
geoMean_Hk
final <- cbind(delta_Ct, RQ, geoMean_Hk)
nGOI <- 3
Rel_expression <- matrix(nrow=nrow(final), ncol=nGOI)
for(i in 1:nGOI) {
Rel_expression[ , i] <-  RQ[, i]/final[, "geoMean_Hk"]
}
colnames(Rel_expression) <- c(paste0("RelExp_", names(efficiencies)[1:3]))
final <- data.frame(sampleID=pcr1$sampleID, age=pcr1$age, line=pcr1$line, final, Rel_expression)
View(final)
stat <- final %>% select(sampleID, age, line, RelExp_B1, RelExp_B8, RelExp_B15)
stat$age_line <- paste(stat$age, stat$line, sep = "_")
lm1 <- lm(RelExp_B1 ~ line + age, data=stat)
lm2 <- lm(RelExp_B1 ~ age_line, data=stat)
summary(lm1)
summary(lm2)
lm2 <- lm(RelExp_B1~ 0 + line * age, data = final)
summary(lm2)
age <- stat$age
line <- stat$line
df1 <- reshape(stat, direction='long',
varying=4:6,
timevar='Transcript',
times=c('B1', 'B8', "B15"),
v.names=c('Rel_expression_ratio'),
idvar='sampleID')
df1 <- df1[,c("sampleID", "Transcript", "Rel_expression_ratio", "age", "line")]
df2 <- reshape(df1[,c(1,2,3)], direction = "wide",timevar="sampleID",idvar="Transcript")
df3 <- df2[,-1]
rownames(df3) <- df2[,1]
View(df3)
######################## KO vs TAG #################################
#expression in the first one compared to the second one
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
library(limma)
#design <- model.matrix(~0+line)
#design <- model.matrix(~0+age)
design <- model.matrix(~0+age+line)
fit <- lmFit(df3,design)
#contrast.matrix <- makeContrasts("age3months-age1month",levels=design)
contrast.matrix <- makeContrasts("lineKO-lineTAG",levels=design)
fit
######################## KO vs TAG #################################
#expression in the first one compared to the second one
#if (!require("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#
#BiocManager::install("limma")
library(limma)
#design <- model.matrix(~0+line)
#design <- model.matrix(~0+age)
######################## TAG vs WT #################################
fit <- lmFit(df3,design)
contrast.matrix <- makeContrasts("lineTAG-lineWT",levels=design)
fit <- contrasts.fit(fit,contrast.matrix)
fit=eBayes(fit)
names(fit)
DE <- summary(decideTests(fit,adjust.method="BH",p.value=0.05))
results = topTable(fit,adjust.method="BH", sort.by = "p")
####################### KO vs WT ##################################
fit <- lmFit(df3,design)
contrast.matrix <- makeContrasts("genotypeKO-genotypeWT",levels=design)
#design <- model.matrix(~0+line)
#design <- model.matrix(~0+age)
design <- model.matrix(~0+age+line)
fit <- lmFit(df3,design)
fit
#contrast.matrix <- makeContrasts("age3months-age1month",levels=design)
contrast.matrix <- makeContrasts("lineKO-lineTAG",levels=design)
######################## TAG vs WT #################################
fit <- lmFit(df3,design)
contrast.matrix <- makeContrasts("lineTAG-lineWT",levels=design)
fit <- contrasts.fit(fit,contrast.matrix)
fit=eBayes(fit)
names(fit)
DE <- summary(decideTests(fit,adjust.method="BH",p.value=0.05))
results = topTable(fit,adjust.method="BH", sort.by = "p")
results
results = topTable(fit,adjust.method="BH", sort.by = "p")
results
####################### KO vs WT ##################################
fit <- lmFit(df3,design)
contrast.matrix <- makeContrasts("genotypeKO-genotypeWT",levels=design)
#design <- model.matrix(~0+line)
#design <- model.matrix(~0+age)
design <- model.matrix(~0+age+line)
design
#design <- model.matrix(~0+line)
#design <- model.matrix(~0+age)
design <- model.matrix(~0+line+age)
design
######################## KO vs TAG #################################
#expression in the first one compared to the second one
#if (!require("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#
#BiocManager::install("limma")
library(limma)
#design <- model.matrix(~0+line)
#design <- model.matrix(~0+age)
design <- model.matrix(~0+line+age)
#design <- model.matrix(~0+age+line)
fit <- lmFit(df3,design)
#contrast.matrix <- makeContrasts("age3months-age1month",levels=design)
contrast.matrix <- makeContrasts("lineKO-lineTAG",levels=design)
fit <- contrasts.fit(fit,contrast.matrix)
fit <- eBayes(fit)
names(fit)
DE <- summary(decideTests(fit,adjust.method="BH",p.value=0.05))
#results = topTable(fit,adjust.method="BH",sort.by="p")
results = topTable(fit)
results
fit <- contrasts.fit(fit,contrast.matrix)
design
library(purrr)
library(tibble)
library(tidyverse)
nKO <- 5 #No. of KO sample
nTAG <- 5 # No. of TAG sample
nWT <- 5 # No. of WT sample
set.seed(11)
geneB1 <- rbind(replicate(n = 3, rnorm(nKO, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 19, .08), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 19, .08), simplify = TRUE))
geneB8 <- rbind(replicate(n = 3, rnorm(nKO, 15, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 13.5, .08), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 13.5, .08), simplify = TRUE))
geneB15 <- rbind(replicate(n = 3, rnorm(nKO, 5.5, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 5, .08), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 5, .08), simplify = TRUE))
GOI1 <- data.frame(geneB1, geneB8, geneB15)
Hk1 <- rbind(replicate(n = 3, rnorm(nKO, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 20, .1), simplify = TRUE))
Hk2 <- rbind(replicate(n = 3, rnorm(nKO, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 22, .1), simplify = TRUE))
Hk_1 <- data.frame(Hk1, Hk2)
day15 <- data.frame(GOI1, Hk_1)
colnames(day15) <- c(paste0("geneB1_run", seq(1:3)), paste0("geneB8_run", seq(1:3)), paste0("geneB15_run", seq(1:3)), paste0("Hk1_run", seq(1:3)), paste0("Hk2_run", seq(1:3)))
day15$sampleID <- c(paste0("KO", seq(1, nKO)),
paste0("TAG", seq(1, nTAG)),
paste0("WT", seq(1, nWT))) #naming sample/ID
day15 <- day15[, c(ncol(day15), 1:ncol(day15) - 1)] #reordering: last column at the beginning and others are in the same sequence
day15$age <- rep("15days", times = nrow(day15)) #adding age to all. nrow means how many sample
day15$line <- c(rep("KO", times = nKO), rep("TAG", times = nTAG), rep("WT", times = nWT))
geneB1_1 <- rbind(replicate(n = 3, rnorm(nKO, 15, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 13, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 13, .07), simplify = TRUE))
geneB8_1 <- rbind(replicate(n = 3, rnorm(nKO, 11, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 9.5, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 9.5, .07), simplify = TRUE))
geneB15_1 <- rbind(replicate(n = 3, rnorm(nKO, 4, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 3.5, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 3.5, .07), simplify = TRUE))
GOI2 <- data.frame(geneB1_1, geneB8_1, geneB15_1)
Hk1_1 <- rbind(replicate(n = 3, rnorm(nKO, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 20, .1), simplify = TRUE))
Hk2_1 <- rbind(replicate(n = 3, rnorm(nKO, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 22, .1), simplify = TRUE))
Hk_2 <- data.frame(Hk1_1, Hk2_1)
month1 <- data.frame(GOI2, Hk_2)
colnames(month1) <- c(paste0("geneB1_run", seq(1:3)), paste0("geneB8_run", seq(1:3)), paste0("geneB15_run", seq(1:3)), paste0("Hk1_run", seq(1:3)), paste0("Hk2_run", seq(1:3)))
month1$sampleID <- c(paste0("KO", seq(nKO+1, 2*nKO)),
paste0("TAG", seq(nTAG+1, 2*nTAG)),
paste0("WT", seq(nWT+1, 2*nWT)))
month1 <- month1[, c(ncol(month1), 1:ncol(month1) - 1)]
month1$age <- rep("1month", times = nrow(month1))
month1$line <- c(rep("KO", times = nKO), rep("TAG", times = nTAG), rep("WT", times = nWT))
geneB1_2 <- rbind(replicate(n = 3, rnorm(nKO, 12, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 10, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 10, .07), simplify = TRUE))
geneB8_2 <- rbind(replicate(n = 3, rnorm(nKO, 8, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 7, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 7, .07), simplify = TRUE))
geneB15_2 <- rbind(replicate(n = 3, rnorm(nKO, 4, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 3, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 3, .07), simplify = TRUE))
GOI3 <- data.frame(geneB1_2, geneB8_2, geneB15_2)
Hk1_2 <- rbind(replicate(n = 3, rnorm(nKO, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 20, .1), simplify = TRUE))
Hk2_2 <- rbind(replicate(n = 3, rnorm(nKO, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 22, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 22, .1), simplify = TRUE))
Hk_3 <- data.frame(Hk1_2, Hk2_2)
month3 <- data.frame(GOI3, Hk_3)
colnames(month3) <- c(paste0("geneB1_run", seq(1:3)), paste0("geneB8_run", seq(1:3)), paste0("geneB15_run", seq(1:3)), paste0("Hk1_run", seq(1:3)), paste0("Hk2_run", seq(1:3)))
month3$sampleID <- c(paste0("KO", seq(2*nKO+1, 3*nKO)),
paste0("TAG", seq(2*nTAG+1, 3*nTAG)),
paste0("WT", seq(2*nWT+1, 3*nWT)))
month3 <- month3[, c(ncol(month3), 1:ncol(month3) - 1)]
month3$age <- rep("3months", times = nrow(month3))
month3$line <- c(rep("KO", times = nKO), rep("TAG", times = nTAG), rep("WT", times = nWT))
pcr1 <- rbind(day15, month1, month3)
a <- pcr1 %>% select_if(is.numeric) %>% colnames()
pcr1$Ct_geneB1 <- apply(pcr1[, c(grep("geneB1_", a, ignore.case = TRUE, value = T))], 1, mean)
pcr1$Ct_geneB8 <- apply(pcr1[, c(grep("geneB8_", a, ignore.case = TRUE, value = T))], 1, mean)
pcr1$Ct_geneB15 <- apply(pcr1[, c(grep("geneB15_", a, ignore.case = TRUE, value = T))], 1, mean)
pcr1$Ct_Hk1 <- apply(pcr1[, c(grep("Hk1", a, ignore.case = TRUE, value = T))], 1, mean)
pcr1$Ct_Hk2 <- apply(pcr1[, c(grep("Hk2", a, ignore.case = TRUE, value = T))], 1, mean)
data1 <- pcr1[, c("sampleID", "age", "line", "Ct_geneB1", "Ct_geneB8", "Ct_geneB15", "Ct_Hk1", "Ct_Hk2")]
efficiencies <- c(1.98, 2, 2.02, 2.01, 2.01)
names(efficiencies) <- c("B1", "B8", "B15", "Hk1", "Hk2")
calibrator <- data1[data1$line == "WT" & data1$age == "15days",] %>% select_if(is.numeric)
Ct_avg <- apply(calibrator, 2, mean)
Ct <- data1 %>% select_if(is.numeric)
delta_Ct <- matrix(nrow=nrow(Ct), ncol=ncol(Ct))
for(i in 1:ncol(Ct)) {
delta_Ct[ , i] <- Ct_avg[[i]] - Ct[ , i]
}
colnames(delta_Ct) <- c(paste0("delta", names(Ct)))
RQ <- matrix(nrow=nrow(delta_Ct), ncol=ncol(delta_Ct))
for(i in 1:length(efficiencies)) {
RQ[ , i] <-  efficiencies[i]^delta_Ct[,i]
}
colnames(RQ) <- c(paste0("RQ_", names(efficiencies)))
geoMean_Hk <- apply(RQ[, 4:5], 1, function(x) exp(mean(log(x))))
final <- cbind(delta_Ct, RQ, geoMean_Hk)
nGOI <- 3
Rel_expression <- matrix(nrow=nrow(final), ncol=nGOI)
for(i in 1:nGOI) {
Rel_expression[ , i] <-  RQ[, i]/final[, "geoMean_Hk"]
}
colnames(Rel_expression) <- c(paste0("RelExp_", names(efficiencies)[1:3]))
final <- data.frame(sampleID=pcr1$sampleID, age=pcr1$age, line=pcr1$line, final, Rel_expression)
library(limma)
#design <- model.matrix(~0+line)
#design <- model.matrix(~0+age)
design <- model.matrix(~0+line+age)
fit <- lmFit(df3,design)
contrast.matrix <- makeContrasts("lineTAG-lineWT",levels=design)
fit <- contrasts.fit(fit,contrast.matrix)
fit=eBayes(fit)
names(fit)
DE <- summary(decideTests(fit,adjust.method="BH",p.value=0.05))
results = topTable(fit,adjust.method="BH", sort.by = "p")
results
fit <- lmFit(df3,design)
contrast.matrix <- makeContrasts("genotypeKO-genotypeWT",levels=design)
fit <- lmFit(df3,design)
contrast.matrix <- makeContrasts("lineKO-lineWT",levels=design)
fit <- contrasts.fit(fit,contrast.matrix)
fit=eBayes(fit)
names(fit)
DE <- summary(decideTests(fit,adjust.method="BH",p.value=0.05))
results = topTable(fit,adjust.method="BH", sort.by = "p")
results
design2 <- model.matrix(~0+age)
contrast.matrix <- makeContrasts("age15days-age1month",levels=design2)
fit <- lmFit(df3,design2)
fit <- contrasts.fit(fit,contrast.matrix)
fit=eBayes(fit)
names(fit)
DE <- summary(decideTests(fit,adjust.method="BH",p.value=0.05))
results = topTable(fit,adjust.method="BH",sort.by="p")
results
design2
design2
R.version
library(purrr)
library(tibble)
set.seed(10)
df <- data.frame(replicate(n = 3, rnorm(5, 12, .1), simplify = TRUE))
df
nKO <- 5 #No. of KO sample
nTAG <- 5 # No. of TAG sample
nWT <- 5 # No. of WT sample
set.seed(11)
geneB1 <- rbind(replicate(n = 3, rnorm(nKO, 25, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 22, .08), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 22, .08), simplify = TRUE))
geneB1
Hk <- rbind(replicate(n = 3, rnorm(nKO, 25, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 25, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 25, .1), simplify = TRUE)) #making the dataset with Ct values
Hk
day15 <- data.frame(geneB1, Hk)
colnames(day15) <- c(paste0("geneB1_run", seq(1:3)), paste0("Hk_run", seq(1:3))) #naming the columns. 3 runs
day15$sampleID <- c(paste0("KO", seq(1, nKO)),
paste0("TAG", seq(1, nTAG)),
paste0("WT", seq(1, nWT))) #naming sample/ID
day15 <- day15[, c(ncol(day15), 1:c(ncol(day15)-1))] #reordering
day15$age <- rep("15days", times = nrow(day15)) #adding age to all. nrow means how many sample
day15$line <- c(rep("KO", times = nKO), rep("TAG", times = nTAG), rep("WT", times = nWT))
day15
geneB1_1 <- rbind(replicate(n = 3, rnorm(nKO, 20, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 17, .07), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 17, .07), simplify = TRUE))
geneB1_1
Hk1 <- rbind(replicate(n = 3, rnorm(nKO, 25, .1), simplify = TRUE),
replicate(n = 3, rnorm(nTAG, 25, .1), simplify = TRUE),
replicate(n = 3, rnorm(nWT, 25, .1), simplify = TRUE))
Hk1
month1 <- data.frame(geneB1_1, Hk1)
colnames(month1) <- c(paste0("geneB1_run", seq(1:3)), paste0("Hk_run", seq(1:3)))
month1$sampleID <- c(paste0("KO", seq(nKO+1, 2*nKO)),
paste0("TAG", seq(nTAG+1, 2*nTAG)),
paste0("WT", seq(nWT+1, 2*nWT)))
month1 <- month1[, c(ncol(month1), 1:ncol(month1)-1)]
month1$age <- rep("1month", times = nrow(month1))
month1$line <- c(rep("KO", times = nKO), rep("TAG", times = nTAG), rep("WT", times = nWT))
month1
geneB1_2 <- rbind(replicate(n = 3, rnorm(5, 14, .1), simplify = TRUE),
replicate(n = 3, rnorm(5, 10, .07), simplify = TRUE),
replicate(n = 3, rnorm(5, 10, .07), simplify = TRUE))
geneB1_2
Hk2 <- rbind(replicate(n = 3, rnorm(5, 25, .1), simplify = TRUE),
replicate(n = 3, rnorm(5, 25, .1), simplify = TRUE),
replicate(n = 3, rnorm(5, 25, .1), simplify = TRUE))
Hk2
month3 <- data.frame(geneB1_2, Hk2)
colnames(month3) <- c(paste0("geneB1_run", seq(1:3)), paste0("Hk_run", seq(1:3)))
month3$sampleID <- c(paste0("KO", seq(2*nKO+1, 3*nKO)),
paste0("TAG", seq(2*nTAG+1, 3*nTAG)),
paste0("WT", seq(2*nWT+1, 3*nWT)))
month3 <- month3[, c(ncol(month3), 1:ncol(month3)-1)]
month3$age <- rep("3months", times = nrow(month3)) #adding age to all. nrow means how many sample
month3$line <- c(rep("KO", times = nKO), rep("TAG", times = nTAG), rep("WT", times = nWT))
month3
pcr <- rbind(day15, month1, month3)
pcr
a <- pcr %>% select_if(is.numeric) %>% colnames()
pcr$Ct_geneB1 <- apply(pcr[, c(grep("geneB1_", a, ignore.case = TRUE, value = T))], 1, mean)
pcr$Ct_Hk <- apply(pcr[, c(grep("Hk_", a, ignore.case = TRUE, value = T))], 1, mean)
pcr
data <- pcr[, c("sampleID", "age", "line", "Ct_geneB1", "Ct_Hk")]
data
data$delta_Ct <- data$Ct_geneB1 - data$Ct_Hk
data
calibrator <- data[data$line == "WT" & data$age == "15days",]
calibrator
calibrator_deltaCt <- mean(calibrator$delta_Ct)
data$delta_deltaCt <- data$delta_Ct - calibrator_deltaCt
data
data$fold_gene_expression <- 2^-(data$delta_deltaCt)
data
par(mfrow = c(1,1))
hist(data$fold_gene_expression, xlab="fold change", main="Histogram of fold change")
data$log_fold_change <- log2(data$fold_gene_expression)
par(mfrow = c(1,1))
hist(data$log_fold_change, xlab="log fold change", main="Histogram of log fold change")
par(mfrow = c(1,2))
hist(data$fold_gene_expression, xlab="fold change", main="Histogram of fold change")
hist(data$log_fold_change, xlab="log fold change", main="Histogram of log fold change")
write.csv(data, "pcr1.csv")
table(data$age, data$line)
boxplot(log_fold_change ~ line*age, data=data, xlab = "Age-Line combinations", ylab = "Log fold change", main="Boxplot of log fold change")
data$age_line <- paste(data$age, data$line, sep = "_")
lm1 <- lm(log_fold_change ~ age_line, data=data)
summary(lm1)
estimate <-  mean(data$log_fold_change[data$age_line == "15days_KO"])
se <- function(x) sqrt(var(x) / length(x))
SE <- se(data$log_fold_change[data$age_line == "15days_KO"]) #`SE` might be a bit different than the value shown in the output table
t_value <- estimate/SE
estimate <-  mean(data$log_fold_change[data$age_line == "15days_KO"])
se <- function(x) sqrt(var(x) / length(x))
SE <- se(data$log_fold_change[data$age_line == "15days_KO"]) #`SE` might be a bit different than the value shown in the output table
t_value <- estimate/SE
data$age_line <- relevel(factor(data$age_line), ref = "15days_WT")
lm2 <- lm(log_fold_change ~ age_line, data=data)
summary(lm2)
library(emmeans)
em=emmeans(lm2,~age_line)
emp=emmeans(lm2,pairwise~age_line)
em
emp
plot(em, comparisons = TRUE, ylab = "age-line combination")
lm3 <- lm(log_fold_change ~ age + line, data=data)
summary(lm3)
lm4 <- lm(log_fold_change ~ age*line, data=data)
summary(lm4)
anova(lm2)
?select_if()
